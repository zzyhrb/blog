<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zzy.blog.mapper.CommentMapper" >
  
 	 <resultMap id="BaseResultMap" type="com.zzy.blog.pojo.Comment" >
	      <id property="id" column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
	      <result property="userId" column="user_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
	      <result property="createTime" column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
	      <result property="ip" column="ip" jdbcType="VARCHAR" javaType="java.lang.String" />
	      <result property="content" column="content" jdbcType="VARCHAR" javaType="java.lang.String" />
	      <result property="parentId" column="parent_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
	      <result property="replayUserid" column="replay_userid" jdbcType="INTEGER" javaType="java.lang.Integer" />
	      <result property="status" column="status" jdbcType="INTEGER" javaType="java.lang.Integer" />
	      <result property="blogId" column="blog_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
  	</resultMap>
  
  	<sql id="Base_Column_List">
  		id,user_id,create_time,ip,content,parent_id,replay_userid,status,blog_id
  	</sql>
  	
  	<select id="queryCommentAll" resultType="java.util.Map" parameterType="java.lang.Integer">
  		SELECT
			c.content,
			c.id,
			c.ip,
			c.blog_id as blogId,
			c.create_time as createTime,
			c.user_id as userId,
			c.replay_userid as replayId,
			u.username,
			u.header_pic as uheaderPic,
			ru.username as rusername,
			ru.header_pic as ruheaderPic
		FROM
			rumo_comment c
		LEFT JOIN rumo_user u ON u.id = c.user_id
		LEFT JOIN rumo_user ru ON ru.id = c.replay_userid
		WHERE
			c. STATUS = 1
		AND c.blog_id = #{blogId,jdbcType=INTEGER} AND parent_id = 0 
		ORDER BY
			c.create_time DESC
  	</select>
  	
  	<select id="queryCommentByParentId" resultType="java.util.Map" parameterType="java.lang.Integer">
  		SELECT
			c.content,
			c.id,
			c.ip,
			c.blog_id as blogId,
			c.create_time as createTime,
			c.user_id as userId,
			c.replay_userid as replayId,
			u.username,
			u.header_pic as uheaderPic,
			ru.username as rusername,
			ru.header_pic as ruheaderPic
		FROM
			rumo_comment c
		LEFT JOIN rumo_user u ON u.id = c.user_id
		LEFT JOIN rumo_user ru ON ru.id = c.replay_userid
		WHERE
			c. STATUS = 1
		AND c.blog_id = #{blogId,jdbcType=INTEGER} AND parent_id = #{parentId,jdbcType=INTEGER}
		ORDER BY
			c.create_time DESC
  	</select>
  
  	<select id="getCommentById" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
  		SELECT
			<include refid="Base_Column_List"></include>
		FROM
			rumo_comment
		WHERE
			id = #{id,jdbcType=INTEGER}
  	</select>
  	
  	<insert id="saveComment" flushCache="true" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
  		insert into rumo_comment (user_id,create_time,ip,content,parent_id,replay_userid,status,blog_id)values(#{userId,jdbcType=INTEGER},now(),#{ip,jdbcType=VARCHAR},#{content,jdbcType=VARCHAR},#{parentId,jdbcType=INTEGER},#{replayUserid,jdbcType=INTEGER},#{status,jdbcType=INTEGER},#{blogId,jdbcType=INTEGER})
  	</insert>
  	
  	<update id="updateComment" parameterType="com.zzy.blog.pojo.Comment" flushCache="true">
  		update rumo_comment 
  		<set>
			<if test="id!=null">id = #{id,jdbcType=INTEGER},</if>
			<if test="userId!=null">user_id = #{userId,jdbcType=INTEGER},</if>
			<if test="createTime!=null">create_time = now(),</if>
			<if test="ip!=null and ip!=''">ip = #{ip,jdbcType=VARCHAR},</if>
			<if test="content!=null and content!=''">content = #{content,jdbcType=VARCHAR},</if>
			<if test="parentId!=null">parent_id = #{parentId,jdbcType=INTEGER},</if>
			<if test="replayUserid!=null">replay_userid = #{replayUserid,jdbcType=INTEGER},</if>
			<if test="status!=null">status = #{status,jdbcType=INTEGER},</if>
			<if test="blogId!=null">blog_id = #{blogId,jdbcType=INTEGER},</if>
  		</set>
  		where id = #{id ,jdbcType=INTEGER}
  	</update>
  	
  	<delete id="deleteCommentById" flushCache="true">
  		delete from rumo_comment where id = #{id,jdbcType=INTEGER}
  	</delete>
  	
 </mapper>	